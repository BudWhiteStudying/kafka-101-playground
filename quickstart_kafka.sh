#!/bin/zsh

# CONSTANTS
starting_port=9092
PIDs=()

while getopts r:t:c: flag
do
    case "${flag}" in
        r) replication_factor=${OPTARG};;
        t) topic_name=${OPTARG};;
		c) config_location=${OPTARG};;
    esac
done

if [ -z "$replication_factor" ] || [ -z "$topic_name" ] || [ -z "$config_location" ]
then
	echo "-r -t and -c options are mandatory"
	exit 1
else
	echo "\nreplication factor: $replication_factor";
	echo "topic name: $topic_name";
	echo "config location: $config_location";
fi

echo "\nStarting ZooKeeper server..."
zookeeper-server-start $config_location/zookeeper.properties > logs/zookeeper.log &
zookeeper_start_rc=$?
PIDs+=($!)

if [ $zookeeper_start_rc -ne 0 ]
then
	echo "Failed starting ZooKeeper, aborting"
	exit 1
else
	echo "Giving ZooKeeper 10 seconds to spin up..."
	sleep 10
	echo "...done sleeping\n"
fi

echo "Starting "$replication_factor" separate Kafka servers..."
loop_limit=$(($replication_factor-1))
for i in {0..$loop_limit}
do
	config_file_name="server-"$i".properties"
	log_file_name="server-"$i".log"
	echo "   generating properties file" $config_file_name "for server" $i
	cp $config_location/tpl/server.tpl.properties $config_location/$config_file_name
	file_copy_rc=$?
	if [ $file_copy_rc -eq 0 ]
	then
		listener_port=$(($starting_port+$i))
		echo "   replacing placeholders in file" $config_location/$config_file_name
		sed -i '' "s/BROKER_ID_PHOLDER/$i/g" $config_location/$config_file_name
		broker_id_pholder_replacement_rc=$?
		sed -i '' "s/NUM_PARTITIONS_PHOLDER/$replication_factor/g" $config_location/$config_file_name
		part_index_pholder_replacement_rc=$?
		sed -i '' "s/LISTENER_PORT_PHOLDER/$listener_port/g" $config_location/$config_file_name
		listener_port_pholder_replacement_rc=$?
		if [ $broker_id_pholder_replacement_rc -eq 0 ] && [ $part_index_pholder_replacement_rc -eq 0 ] && [ $listener_port_pholder_replacement_rc -eq 0 ]
		then
			echo "   starting server" $i"\n"
			kafka-server-start ./$config_location/$config_file_name > logs/$log_file_name &
			PIDs+=($!)
		else
			echo "Could not replace placeholders in template file, aborting"
			exit 1
		fi
	else
		echo "Could not copy template file, aborting"
		exit 1
	fi
done

echo "All ZooKeeper and Kafka servers started, you can terminate them all by issuing the following command:\n"
echo "kill $PIDs && rm -rf /tmp/zookeeper && rm -rf /tmp/kafka-logs\n"
echo "kill $PIDs && rm -rf /tmp/zookeeper && rm -rf /tmp/kafka-logs" > kill_and_cleanup.sh
chmod +x kill_and_cleanup.sh
echo "or you can execute the 'kill_and_cleanup.sh' file that was generated by this script\n"

echo "Creating topic '$topic_name' with replication_factor '$replication_factor' and port '$starting_port' at localhost"
kafka-topics --create --replication-factor $replication_factor --partitions 1 --topic $topic_name --bootstrap-server localhost:$starting_port > logs/topic-creation.log 2> logs/topic-creation.log
topic_creation_rc=$?
if [ $topic_creation_rc -eq 0 ]
then
	echo "Topic '$topic_name' has been created"
else
	echo "Could not create topic $topic_name"
	exit 1
fi
